# Generated by Django 4.2.11 on 2024-07-09 14:51

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BattlePass',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('event_id', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('country_code', models.CharField(max_length=10, null=True)),
                ('bracket', models.IntegerField(blank=True, null=True)),
                ('is_anonymous', models.BooleanField(default=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerBadge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('steam_id', models.BigIntegerField(blank=True, null=True)),
                ('badge_id', models.IntegerField(blank=True, null=True)),
                ('slot', models.IntegerField(blank=True, null=True)),
                ('created_date_time', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerName',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('last_seen_date_time', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProSteamAccount',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('steam_account_id', models.PositiveBigIntegerField(editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('real_name', models.CharField(blank=True, max_length=100, null=True)),
                ('fantasy_role', models.IntegerField(blank=True, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('sponsor', models.CharField(blank=True, max_length=100, null=True)),
                ('is_locked', models.BooleanField(default=False, null=True)),
                ('is_pro', models.BooleanField(default=False, null=True)),
                ('total_earnings', models.IntegerField(blank=True, null=True)),
                ('birthday', models.CharField(blank=True, max_length=255, null=True)),
                ('romanized_real_name', models.CharField(blank=True, max_length=100, null=True)),
                ('roles', models.IntegerField(blank=True, null=True)),
                ('aliases', models.CharField(blank=True, max_length=255, null=True)),
                ('statuses', models.IntegerField(blank=True, null=True)),
                ('twitter_link', models.URLField(blank=True, null=True)),
                ('twitch_link', models.URLField(blank=True, null=True)),
                ('instagram_link', models.URLField(blank=True, null=True)),
                ('vk_link', models.URLField(blank=True, null=True)),
                ('you_tube_link', models.URLField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('weibo_link', models.URLField(blank=True, null=True)),
                ('signature_heroes', models.CharField(blank=True, max_length=255, null=True)),
                ('countries', models.CharField(blank=True, max_length=255, null=True)),
                ('ti_wins', models.IntegerField(blank=True, null=True)),
                ('is_ti_winner', models.BooleanField(default=False, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SeasonRank',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('season_rank_id', models.IntegerField(blank=True, null=True)),
                ('as_of_date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('is_core', models.BooleanField(default=False, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteamAccount',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.PositiveBigIntegerField(editable=False, unique=True)),
                ('last_active_time', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_uri', models.URLField(blank=True, null=True)),
                ('real_name', models.CharField(blank=True, max_length=100, null=True)),
                ('time_created', models.CharField(blank=True, max_length=50, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state_code', models.CharField(blank=True, max_length=10, null=True)),
                ('city_id', models.IntegerField(blank=True, null=True)),
                ('community_visible_state', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('last_log_off', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.URLField(blank=True, null=True)),
                ('primary_clan_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('solo_rank', models.IntegerField(blank=True, null=True)),
                ('party_rank', models.IntegerField(blank=True, null=True)),
                ('is_dota_plus_subscriber', models.BooleanField(default=False, null=True)),
                ('dota_plus_original_start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('is_anonymous', models.BooleanField(default=False, null=True)),
                ('is_stratz_public', models.BooleanField(default=False, null=True)),
                ('season_rank', models.IntegerField(blank=True, null=True)),
                ('season_leaderboard_rank', models.IntegerField(blank=True, null=True)),
                ('season_leaderboard_division_id', models.IntegerField(blank=True, null=True)),
                ('smurf_flag', models.IntegerField(blank=True, null=True)),
                ('smurf_check_date', models.CharField(blank=True, max_length=50, null=True)),
                ('last_match_date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('last_match_region_id', models.IntegerField(blank=True, null=True)),
                ('dota_account_level', models.IntegerField(blank=True, null=True)),
                ('rank_shift', models.IntegerField(blank=True, null=True)),
                ('bracket', models.IntegerField(blank=True, null=True)),
                ('bracket_basic_ids', models.IntegerField(blank=True, null=True)),
                ('pro_steam_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steam_account', to='players.prosteamaccount', to_field='steam_account_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('first_match_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('first_match_date_time', models.CharField(blank=True, max_length=220, null=True)),
                ('last_match_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('last_match_date_time', models.CharField(blank=True, max_length=220, null=True)),
                ('steam_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team', to='players.steamaccount', to_field='id')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='teams.team', to_field='id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.PositiveBigIntegerField(editable=False, unique=True)),
                ('last_match_date', models.CharField(blank=True, max_length=50, null=True)),
                ('last_region_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('language_codes', models.JSONField(blank=True, null=True)),
                ('first_match_date', models.PositiveBigIntegerField(blank=True, null=True)),
                ('match_count', models.PositiveBigIntegerField(blank=True, null=True)),
                ('win_count', models.PositiveBigIntegerField(blank=True, null=True)),
                ('behavior_score', models.IntegerField(blank=True, null=True)),
                ('is_followed', models.BooleanField(default=False, null=True)),
                ('is_favorite', models.BooleanField(default=False, null=True)),
                ('badges', models.ManyToManyField(blank=True, to='players.playerbadge')),
                ('battle_pass', models.ManyToManyField(blank=True, to='players.battlepass')),
                ('names', models.ManyToManyField(blank=True, to='players.playername')),
                ('ranks', models.ManyToManyField(blank=True, to='players.seasonrank')),
                ('steam_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player', to='players.steamaccount', to_field='id')),
                ('team', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.teammember')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
